Search.setIndex({"docnames": ["autoapi/ccs/common/exceptions/index", "autoapi/ccs/common/index", "autoapi/ccs/common/io/index", "autoapi/ccs/common/math/ewald/index", "autoapi/ccs/common/math/index", "autoapi/ccs/common/neighborlist/index", "autoapi/ccs/data/conversion/index", "autoapi/ccs/data/index", "autoapi/ccs/fitting/index", "autoapi/ccs/fitting/main-copy/index", "autoapi/ccs/fitting/main/index", "autoapi/ccs/fitting/objective/index", "autoapi/ccs/fitting/spline_functions/index", "autoapi/ccs/index", "autoapi/ccs/scripts/ccs_build_db-copy/index", "autoapi/ccs/scripts/ccs_build_db/index", "autoapi/ccs/scripts/ccs_export_sktable/index", "autoapi/ccs/scripts/ccs_fetch/index", "autoapi/ccs/scripts/ccs_fit/index", "autoapi/ccs/scripts/ccs_validate/index", "autoapi/ccs/scripts/index", "autoapi/ccs_ase_calculator/index", "autoapi/ccs_ppmd/index", "autoapi/index", "autoapi/regression/index", "autoapi/timing/index", "changelog", "examples", "index", "license"], "filenames": ["autoapi/ccs/common/exceptions/index.rst", "autoapi/ccs/common/index.rst", "autoapi/ccs/common/io/index.rst", "autoapi/ccs/common/math/ewald/index.rst", "autoapi/ccs/common/math/index.rst", "autoapi/ccs/common/neighborlist/index.rst", "autoapi/ccs/data/conversion/index.rst", "autoapi/ccs/data/index.rst", "autoapi/ccs/fitting/index.rst", "autoapi/ccs/fitting/main-copy/index.rst", "autoapi/ccs/fitting/main/index.rst", "autoapi/ccs/fitting/objective/index.rst", "autoapi/ccs/fitting/spline_functions/index.rst", "autoapi/ccs/index.rst", "autoapi/ccs/scripts/ccs_build_db-copy/index.rst", "autoapi/ccs/scripts/ccs_build_db/index.rst", "autoapi/ccs/scripts/ccs_export_sktable/index.rst", "autoapi/ccs/scripts/ccs_fetch/index.rst", "autoapi/ccs/scripts/ccs_fit/index.rst", "autoapi/ccs/scripts/ccs_validate/index.rst", "autoapi/ccs/scripts/index.rst", "autoapi/ccs_ase_calculator/index.rst", "autoapi/ccs_ppmd/index.rst", "autoapi/index.rst", "autoapi/regression/index.rst", "autoapi/timing/index.rst", "changelog.rst", "examples.md", "index.md", "license.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common.math.ewald</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common.math</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.common.neighborlist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.data.conversion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.fitting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.fitting.main</span> <span class=\"pre\">copy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.fitting.main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.fitting.objective</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.fitting.spline_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_build_db</span> <span class=\"pre\">copy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_build_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_export_sktable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_fetch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_fit</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts.ccs_validate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs.scripts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs_ase_calculator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ccs_ppmd</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">timing</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "CCS - Curvature Constrained Splines", "&lt;no title&gt;"], "terms": {"need": [0, 11, 21, 28], "project": [0, 2, 3, 5, 6, 28], "scripterror": 0, "sourc": [0, 2, 5, 10, 11, 12, 13, 15, 16, 17, 18, 19, 27], "base": [0, 21], "thrown": 0, "command": [0, 13, 18], "line": [0, 13, 18], "script": [0, 9, 10, 13, 23, 27], "math": [1, 13, 23], "ewald": [1, 4, 11, 13, 23], "except": [1, 13, 23], "io": [1, 13, 23], "neighborlist": [1, 13, 23], "routin": [2, 5, 13, 18], "us": [2, 3, 5, 9, 10, 18, 28], "read_detailedout": 2, "fname": [2, 11], "read": [2, 17, 18], "desir": [2, 18], "energi": [2, 11, 21, 28], "term": [2, 28], "from": [2, 11], "dftb": 2, "detail": [2, 11, 24, 28], "out": [2, 11, 28], "file": [2, 9, 10, 11, 17, 18, 27, 28], "paramet": [2, 3, 5, 9, 10, 11, 12, 13, 18, 21, 24], "str": [2, 5, 9, 10, 11, 17, 21], "filenam": [2, 9, 10, 11, 17, 18], "get_paths_from_fil": 2, "extract": 2, "list": [2, 3, 5, 13, 17, 18, 21], "path": [2, 27, 28], "given": [2, 12, 28], "return": [2, 5, 11, 12, 17, 21, 24], "raw": 2, "type": [2, 5, 11, 12, 17, 21, 22, 24], "summat": 3, "tool": [3, 18, 28], "ewald_summ": 3, "atom": [3, 5, 12, 17, 21, 22, 28], "calcul": [3, 5, 12, 21], "multipl": 3, "structur": [3, 17, 18, 28], "ASE": [3, 5, 21, 28], "object": [3, 5, 8, 13, 23, 24, 28], "neighbor": 5, "pair_dist": [5, 17], "rcut": [5, 12, 28], "ch1": [5, 17], "ch2": [5, 17], "pairwis": [5, 17, 28], "distanc": [5, 17, 28], "between": [5, 17], "two": [5, 17, 18, 28], "within": [5, 17, 28], "certain": [5, 17], "cuttoff": [5, 17], "float": [5, 11, 12, 17], "cutoff": 5, "angstrom": 5, "speci": [5, 17], "1": [5, 12, 17, 22, 23, 24, 27, 28], "2": [5, 17, 27, 28], "bohr": 5, "i": [5, 28], "e": 5, "unit": 5, "dists_round": 5, "factori": 6, "requir": [6, 28], "bohr__aa": 6, "0": [6, 12, 14, 15, 17, 21, 22, 24, 27, 28], "529177249": 6, "aa__bohr": 6, "hartree__ev": 6, "27": 6, "2113845": 6, "ev__hartre": 6, "convers": [7, 13, 23], "main": [8, 13, 14, 15, 16, 17, 18, 19, 23, 28], "spline_funct": [8, 13, 23, 28], "pars": [9, 10, 13, 18, 28], "input": [9, 10, 28], "logger": [9, 10, 11, 12], "prepare_input": [9, 10], "data": [9, 10, 13, 23, 27, 28], "struct_data": [9, 10], "struct_data_forc": [9, 10], "twp_fit": [9, 10], "refer": [9, 10, 11], "The": [9, 10, 11, 12, 21, 24, 28], "json": [9, 10, 17, 18, 22, 28], "thi": [11, 12, 17, 21, 23, 24, 28], "construct": [11, 12, 24, 28], "solv": 11, "spline": [11, 12, 18, 21], "l_twb": 11, "l_one": 11, "sto": 11, "energy_ref": 11, "force_ref": 11, "gen_param": 11, "ewald_forc": 11, "function": [11, 12, 24, 28], "method": 11, "reduce_stoichiometri": 11, "solut": [11, 24], "constraint": [11, 18], "predict": [11, 24, 28], "xx": 11, "result": [11, 21], "ndarrrai": 11, "arrai": [11, 28], "train": [11, 28], "interv": 11, "updat": [11, 28], "handl": 11, "merg": 11, "dissolv": 11, "static": [11, 24], "solver": [11, 24, 28], "pp": [11, 24], "qq": [11, 24], "gg": [11, 24], "hh": [11, 24], "aa": [11, 12, 24], "bb": [11, 12, 24], "maxit": [11, 24], "300": [11, 24], "tol": [11, 24], "1e": [11, 24], "10": [11, 24], "matrix": [11, 12, 24], "p": [11, 24], "per": [11, 24], "standard": [11, 24], "quadrat": [11, 24], "program": [11, 24], "qp": [11, 24], "notat": [11, 24], "q": [11, 19, 21, 22, 24], "g": [11, 24], "h": [11, 24], "A": [11, 12, 17, 18, 22, 24, 28], "b": [11, 12, 24], "int": [11, 24], "option": [11, 17, 24], "maximum": [11, 24], "iter": [11, 24], "step": [11, 22, 24], "default": [11, 13, 17, 18, 24, 28], "tupl": [11, 24], "toler": [11, 24], "valu": [11, 18, 24, 28], "dictionari": [11, 21, 24], "contain": [11, 12, 23, 24, 28], "sol": [11, 24], "dict": [11, 24], "merge_interv": [11, 12, 24], "unfold_interv": 11, "eval_obj": 11, "mean": 11, "squar": 11, "error": [11, 28], "ndarrai": [11, 12, 24], "assign_parameter_valu": 11, "list_iter": 11, "over": 11, "self": [11, 21, 24], "np": [11, 12, 21], "get_m": 11, "m": 11, "get_g": 11, "n_switch": [11, 12, 24], "switch": 11, "point": 11, "chang": [11, 21], "sign": 11, "curvatur": [11, 18, 21], "write_error": 11, "ccs_error": [11, 28], "print": 11, "mdl_eng": 11, "ref_eng": 11, "mse": 11, "output": [11, 12, 17, 18, 27, 28], "write_error_forc": 11, "mdl_for": 11, "ref_for": 11, "error_forc": 11, "write_ccs_param": 11, "evalu": [12, 28], "twobodi": [12, 27, 28], "name": [12, 27], "dismat": 12, "distmat_forc": 12, "swtype": [12, 28], "rep": 12, "rmin": 12, "none": [12, 13, 14, 15, 17, 18, 19, 21, 22, 24], "resolut": [12, 28], "describ": 12, "properti": [12, 21], "an": [12, 28], "pair": [12, 24, 28], "dissolve_interv": 12, "get_const": 12, "switch_const": 12, "spline_construct": [12, 24], "matric": [12, 24], "c": [12, 24], "d": [12, 24], "get_v": 12, "v": [12, 24], "get_v_forc": 12, "get_spline_coeff": 12, "coeffici": [12, 28], "1st": 12, "deriv": 12, "its": 12, "end": 12, "process": 12, "turn": 12, "intern": 12, "right": 12, "align": 12, "tabl": 12, "more": 12, "common": [12, 13, 23], "left": 12, "form": 12, "transpos": 12, "mtx": 12, "get_expcoeff": 12, "exponenti": 12, "r0": 12, "beta": 12, "gamma": 12, "alpha": 12, "onebodi": [12, 28], "stomat": 12, "epsilon_support": 12, "true": [12, 16, 21], "epsilon": 12, "fit": [13, 18, 23, 24, 27, 28], "ccs_build_db": [13, 20, 23, 27], "ccs_export_skt": [13, 20, 23, 27], "ccs_fetch": [13, 20, 23, 27, 28], "ccs_fit": [13, 20, 23, 27, 28], "ccs_valid": [13, 20, 23, 27, 28], "__version__": 13, "cmdlinearg": [13, 18], "driver": [13, 18], "argument": [13, 18], "when": [13, 18], "sy": [13, 18], "argv": [13, 18], "ar": [13, 18, 28], "mode": [14, 15, 17, 19], "dft_db": [14, 15, 17, 19], "dftb_db": [14, 15, 17, 19], "file_list": [14, 15], "fortnet": 14, "fals": [14, 15, 19, 21, 24], "greedi": [14, 15], "greed_threshold": [14, 15], "0001": [14, 15], "_write": 16, "elem1": [16, 21], "elem2": [16, 21], "ccs_param": [16, 19, 21, 22, 28], "exp": [16, 21], "write_dftb_splin": 16, "ccs_params_fil": 16, "r_c": 17, "counter": 17, "cut": 17, "off": 17, "6": [17, 21, 28], "\u00e5": 17, "n": [17, 19, 24, 27], "all": [17, 19, 28], "charge_dict": 17, "arg": [17, 18], "7": 17, "collect": 17, "format": [17, 21, 28], "exampl": [17, 21, 27, 28], "To": [17, 21, 28], "ad": [17, 21], "ccs_input": [18, 28], "usag": 18, "multilin": 18, "string": 18, "show": 18, "bodi": [18, 28], "potenti": [18, 28], "constrain": [18, 21], "cubic": 18, "parse_cmdline_arg": 18, "gener": [18, 23, 28], "namespac": 18, "ccs_db": 19, "db": 19, "charg": [19, 21], "charge_sc": [19, 21], "logg": 21, "spline_t": 21, "eval_energi": 21, "r": 21, "eval_forc": 21, "ew": 21, "cc": [21, 22, 23, 24, 27], "kwarg": 21, "ase": [21, 28], "compat": 21, "input_fil": 21, "xxx": 21, "jolla": [21, 28], "what": 21, "doe": 21, "actual": 21, "implemented_properti": 21, "system_chang": 21, "all_chang": 21, "do": 21, "can": [21, 28], "ani": 21, "combin": 21, "forc": 21, "stress": 21, "dipol": 21, "magmom": 21, "ha": 21, "sinc": 21, "last": 21, "six": 21, "posit": 21, "number": [21, 24], "cell": [21, 27], "pbc": 21, "initial_charg": 21, "initial_magmom": 21, "subclass": 21, "implement": 21, "ignor": 21, "thei": 21, "want": 21, "should": [21, 28], "insert": 21, "like": 21, "shown": [21, 28], "dummi": 21, "zero": 21, "len": 21, "3": [21, 27], "first": 21, "call": 21, "set": [21, 28], "creat": [21, 23], "miss": 21, "directori": 21, "pairloop": 22, "particleloop": 22, "state": 22, "positiondat": 22, "particledat": 22, "scalararrai": 22, "kernel": 22, "globalarrai": 22, "constant": 22, "integratorrang": 22, "steepest_desc": 22, "newton": 22, "fire": 22, "dt_start": 22, "a_start": 22, "dt_max": 22, "fire_loop_1": 22, "fire_loop_2": 22, "fire_loop_3": 22, "fire_loop_4": 22, "fire_loop_5": 22, "opt": 22, "10000": 22, "fmax": 22, "05": 22, "eval": 22, "po": 22, "optim": 22, "lbg": 22, "page": 23, "auto": 23, "document": 23, "regress": 23, "ccs_ppmd": 23, "ccs_ase_calcul": 23, "time": 23, "sphinx": 23, "autoapi": 23, "ccs_regressor": 24, "100": 24, "xmin": 24, "xmax": 24, "dx": 24, "sw": [24, 28], "ep": 24, "x": [24, 27, 28], "rubber_band": 24, "y": [24, 28], "const": 24, "knot": 24, "dd": 24, "model": 24, "func": 25, "includ": [26, 29], "changelog": 26, "md": [26, 28], "cell_typ": 27, "markdown": 27, "id": 27, "10d68edc": 27, "7dd1": 27, "4568": 27, "bf2c": 27, "82636f962f43": 27, "metadata": 27, "run": [27, 28], "parametris": 27, "solid": 27, "ne": [27, 28], "code": 27, "execution_count": 27, "cbe0d485": 27, "7b03": 27, "47f7": 27, "9d78": 27, "65441d638f30": 27, "import": 27, "7b1a4aa0": 27, "1a09": 27, "426d": 27, "a1b9": 27, "108c0793e9f6": 27, "text": 27, "plain": 27, "output_typ": 27, "execute_result": 27, "version": 27, "4": [27, 28], "39fb8be4": 27, "e35a": 27, "4f63": 27, "a115": 27, "6eacbff78c18": 27, "builtin": 27, "cach": 27, "doc": 27, "loader": 27, "packag": 27, "spec": 27, "ase_calcul": 27, "debugging_tool": 27, "dir": 27, "null": 27, "36624501": 27, "3db0": 27, "41b7": 27, "ad8a": 27, "e8e673a8bacd": 27, "kernelspec": 27, "display_nam": 27, "python": [27, 28], "ipykernel": 27, "languag": 27, "python3": 27, "language_info": 27, "codemirror_mod": 27, "ipython": 27, "file_extens": 27, "py": [27, 28], "mimetyp": 27, "nbconvert_export": 27, "pygments_lex": 27, "ipython3": 27, "9": 27, "13": 27, "nbformat": 27, "nbformat_minor": 27, "5": [27, 28], "idea": 28, "z": 28, "bin": 28, "__init__": 28, "fcc": 28, "o2": 28, "readm": 28, "setup": 28, "execut": 28, "trane": 28, "pre": 28, "exist": 28, "databas": 28, "dft": 28, "primari": 28, "modul": 28, "which": 28, "you": 28, "follow": 28, "softwar": 28, "pip": 28, "numpi": 28, "scipi": 28, "cvxopt": 28, "github": 28, "com": 28, "teoroo": 28, "cmc": 28, "cd": 28, "export": 28, "pythonpath": 28, "conda": 28, "virtual": 28, "develop": 28, "we": 28, "provid": 28, "folder": 28, "go": 28, "one": 28, "each": 28, "necceseri": 28, "task": 28, "hand": 28, "sampl": 28, "below": 28, "interfac": 28, "o": 28, "02": 28, "minimum": 28, "block": 28, "genar": 28, "specifi": 28, "look": 28, "s1": 28, "22425752": 28, "96": 28, "s2": 28, "29665634": 28, "98": 28, "s3": 28, "20910363": 28, "s4": 28, "98075271": 28, "differ": 28, "configur": 28, "label": 28, "correspond": 28, "oxygen": 28, "stoichiometri": 28, "under": 28, "kei": 28, "perform": 28, "obtain": 28, "log": 28, "target": 28, "absolut": 28, "debug": 28, "inform": 28, "akshai": 28, "krishna": 28, "ak": 28, "kullgren": 28, "eddi": 28, "wadbro": 28, "gplv3": 28, "see": 28, "thank": 28, "member": 28, "group": 28, "uppsala": 28, "univers": 28, "sweden": 28, "licens": 29}, "objects": {"": [[13, 0, 0, "-", "ccs"], [21, 0, 0, "-", "ccs_ase_calculator"], [14, 2, 1, "", "ccs_build_db"], [22, 0, 0, "-", "ccs_ppmd"], [9, 1, 1, "", "logger"], [14, 2, 1, "", "main"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "prepare_input"], [24, 0, 0, "-", "regression"], [25, 0, 0, "-", "timing"], [9, 2, 1, "", "twp_fit"]], "ccs": [[13, 1, 1, "", "__version__"], [13, 2, 1, "", "ccs_build_db"], [13, 2, 1, "", "ccs_export_sktable"], [13, 2, 1, "", "ccs_fetch"], [13, 2, 1, "", "ccs_fit"], [13, 2, 1, "", "ccs_validate"], [1, 0, 0, "-", "common"], [7, 0, 0, "-", "data"], [8, 0, 0, "-", "fitting"], [20, 0, 0, "-", "scripts"]], "ccs.common": [[0, 0, 0, "-", "exceptions"], [2, 0, 0, "-", "io"], [4, 0, 0, "-", "math"], [5, 0, 0, "-", "neighborlist"]], "ccs.common.exceptions": [[0, 3, 1, "", "ScriptError"]], "ccs.common.io": [[2, 2, 1, "", "get_paths_from_file"], [2, 2, 1, "", "read_detailedout"]], "ccs.common.math": [[3, 0, 0, "-", "ewald"]], "ccs.common.math.ewald": [[3, 2, 1, "", "ewald_summation"]], "ccs.common.neighborlist": [[5, 2, 1, "", "pair_dist"]], "ccs.data": [[6, 0, 0, "-", "conversion"]], "ccs.data.conversion": [[6, 1, 1, "", "AA__Bohr"], [6, 1, 1, "", "Bohr__AA"], [6, 1, 1, "", "Hartree__eV"], [6, 1, 1, "", "eV__Hartree"]], "ccs.fitting": [[10, 0, 0, "-", "main"], [11, 0, 0, "-", "objective"], [12, 0, 0, "-", "spline_functions"]], "ccs.fitting.main": [[10, 1, 1, "", "logger"], [10, 2, 1, "", "parse"], [10, 2, 1, "", "prepare_input"], [10, 2, 1, "", "twp_fit"]], "ccs.fitting.objective": [[11, 4, 1, "", "Objective"], [11, 1, 1, "", "logger"]], "ccs.fitting.objective.Objective": [[11, 5, 1, "", "assign_parameter_values"], [11, 5, 1, "", "eval_obj"], [11, 5, 1, "", "get_g"], [11, 5, 1, "", "get_m"], [11, 5, 1, "", "list_iterator"], [11, 5, 1, "", "merge_intervals"], [11, 5, 1, "", "predict"], [11, 5, 1, "", "reduce_stoichiometry"], [11, 5, 1, "", "solution"], [11, 5, 1, "", "solver"], [11, 5, 1, "", "unfold_intervals"], [11, 5, 1, "", "write_CCS_params"], [11, 5, 1, "", "write_error"], [11, 5, 1, "", "write_error_forces"]], "ccs.fitting.spline_functions": [[12, 4, 1, "", "Onebody"], [12, 4, 1, "", "Twobody"], [12, 1, 1, "", "logger"]], "ccs.fitting.spline_functions.Twobody": [[12, 5, 1, "", "dissolve_interval"], [12, 5, 1, "", "get_const"], [12, 5, 1, "", "get_expcoeffs"], [12, 5, 1, "", "get_spline_coeffs"], [12, 5, 1, "", "get_v"], [12, 5, 1, "", "get_v_forces"], [12, 5, 1, "", "merge_intervals"], [12, 5, 1, "", "spline_construction"], [12, 5, 1, "", "switch_const"]], "ccs.scripts": [[15, 0, 0, "-", "ccs_build_db"], [16, 0, 0, "-", "ccs_export_sktable"], [17, 0, 0, "-", "ccs_fetch"], [18, 0, 0, "-", "ccs_fit"], [19, 0, 0, "-", "ccs_validate"]], "ccs.scripts.ccs_build_db": [[15, 2, 1, "", "ccs_build_db"], [15, 2, 1, "", "main"]], "ccs.scripts.ccs_export_sktable": [[16, 2, 1, "", "_write"], [16, 2, 1, "", "main"], [16, 2, 1, "", "write_dftb_spline"]], "ccs.scripts.ccs_fetch": [[17, 2, 1, "", "ccs_fetch"], [17, 2, 1, "", "main"], [17, 2, 1, "", "pair_dist"]], "ccs.scripts.ccs_fit": [[18, 1, 1, "", "FILENAME"], [18, 1, 1, "", "USAGE"], [18, 2, 1, "", "ccs_fit"], [18, 2, 1, "", "main"], [18, 2, 1, "", "parse_cmdline_args"]], "ccs.scripts.ccs_validate": [[19, 2, 1, "", "ccs_validate"], [19, 2, 1, "", "main"]], "ccs_ase_calculator": [[21, 4, 1, "", "CCS"], [21, 2, 1, "", "ew"], [21, 1, 1, "", "logg"], [21, 4, 1, "", "spline_table"]], "ccs_ase_calculator.CCS": [[21, 5, 1, "", "calculate"], [21, 6, 1, "", "implemented_properties"]], "ccs_ase_calculator.spline_table": [[21, 5, 1, "", "eval_energy"], [21, 5, 1, "", "eval_force"]], "ccs_ppmd": [[22, 4, 1, "", "CCS"], [22, 1, 1, "", "Constant"], [22, 4, 1, "", "FIRE"], [22, 1, 1, "", "GlobalArray"], [22, 1, 1, "", "IntegratorRange"], [22, 1, 1, "", "Kernel"], [22, 1, 1, "", "PairLoop"], [22, 1, 1, "", "ParticleDat"], [22, 1, 1, "", "ParticleLoop"], [22, 1, 1, "", "PositionDat"], [22, 1, 1, "", "ScalarArray"], [22, 1, 1, "", "State"], [22, 2, 1, "", "newtonic"], [22, 2, 1, "", "optimize"], [22, 2, 1, "", "steepest_descent"]], "ccs_ppmd.CCS": [[22, 5, 1, "", "eval"]], "ccs_ppmd.FIRE": [[22, 5, 1, "", "FIRE_LOOP_1"], [22, 5, 1, "", "FIRE_LOOP_2"], [22, 5, 1, "", "FIRE_LOOP_3"], [22, 5, 1, "", "FIRE_LOOP_4"], [22, 5, 1, "", "FIRE_LOOP_5"], [22, 5, 1, "", "opt"]], "regression": [[24, 4, 1, "", "CCS_regressor"]], "regression.CCS_regressor": [[24, 5, 1, "", "const"], [24, 5, 1, "", "fit"], [24, 5, 1, "", "merge_intervals"], [24, 5, 1, "", "model"], [24, 5, 1, "", "predict"], [24, 5, 1, "", "rubber_band"], [24, 5, 1, "", "solver"], [24, 5, 1, "", "spline_construction"]], "timing": [[25, 2, 1, "", "timing"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:exception", "4": "py:class", "5": "py:method", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"], "4": ["py", "class", "Python class"], "5": ["py", "method", "Python method"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"cc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28], "common": [0, 1, 2, 3, 4, 5], "except": 0, "modul": [0, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25], "content": [0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25], "subpackag": [1, 13], "submodul": [1, 4, 7, 8, 20], "io": 2, "function": [2, 3, 5, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25], "math": [3, 4], "ewald": 3, "neighborlist": 5, "data": [6, 7], "convers": 6, "fit": [8, 9, 10, 11, 12], "main": [9, 10], "copi": [9, 14], "attribut": [9, 10, 11, 12, 13, 18, 21, 22], "object": 11, "class": [11, 12, 21, 22, 24], "spline_funct": 12, "packag": [13, 28], "script": [14, 15, 16, 17, 18, 19, 20], "ccs_build_db": [14, 15], "ccs_export_skt": 16, "ccs_fetch": 17, "ccs_fit": 18, "ccs_valid": 19, "ccs_ase_calcul": 21, "ccs_ppmd": 22, "api": 23, "refer": 23, "regress": 24, "time": 25, "curvatur": 28, "constrain": 28, "spline": 28, "get": 28, "start": 28, "layout": 28, "prerequisit": 28, "instal": 28, "from": 28, "sourc": 28, "git": 28, "clone": 28, "environ": 28, "variabl": 28, "tutori": 28, "author": 28, "licens": 28, "acknowledg": 28}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ccs.common.exceptions": [[0, "module-ccs.common.exceptions"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"]], "ccs.common": [[1, "module-ccs.common"]], "Subpackages": [[1, "subpackages"], [13, "subpackages"]], "Submodules": [[1, "submodules"], [4, "submodules"], [7, "submodules"], [8, "submodules"], [20, "submodules"]], "ccs.common.io": [[2, "module-ccs.common.io"]], "Functions": [[2, "functions"], [3, "functions"], [5, "functions"], [9, "functions"], [10, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [21, "functions"], [22, "functions"], [25, "functions"]], "ccs.common.math.ewald": [[3, "module-ccs.common.math.ewald"]], "ccs.common.math": [[4, "module-ccs.common.math"]], "ccs.common.neighborlist": [[5, "module-ccs.common.neighborlist"]], "ccs.data.conversion": [[6, "module-ccs.data.conversion"]], "ccs.data": [[7, "module-ccs.data"]], "ccs.fitting": [[8, "module-ccs.fitting"]], "ccs.fitting.main copy": [[9, "ccs-fitting-main-copy"]], "Attributes": [[9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [18, "attributes"], [21, "attributes"], [22, "attributes"]], "ccs.fitting.main": [[10, "module-ccs.fitting.main"]], "ccs.fitting.objective": [[11, "module-ccs.fitting.objective"]], "Classes": [[11, "classes"], [12, "classes"], [21, "classes"], [22, "classes"], [24, "classes"]], "ccs.fitting.spline_functions": [[12, "module-ccs.fitting.spline_functions"]], "ccs": [[13, "module-ccs"]], "Package Contents": [[13, "package-contents"]], "ccs.scripts.ccs_build_db copy": [[14, "ccs-scripts-ccs-build-db-copy"]], "ccs.scripts.ccs_build_db": [[15, "module-ccs.scripts.ccs_build_db"]], "ccs.scripts.ccs_export_sktable": [[16, "module-ccs.scripts.ccs_export_sktable"]], "ccs.scripts.ccs_fetch": [[17, "module-ccs.scripts.ccs_fetch"]], "ccs.scripts.ccs_fit": [[18, "module-ccs.scripts.ccs_fit"]], "ccs.scripts.ccs_validate": [[19, "module-ccs.scripts.ccs_validate"]], "ccs.scripts": [[20, "module-ccs.scripts"]], "ccs_ase_calculator": [[21, "module-ccs_ase_calculator"]], "ccs_ppmd": [[22, "module-ccs_ppmd"]], "API Reference": [[23, "api-reference"]], "regression": [[24, "module-regression"]], "timing": [[25, "module-timing"]], "CCS - Curvature Constrained Splines": [[28, "ccs-curvature-constrained-splines"]], "Getting Started": [[28, "getting-started"]], "Package Layout": [[28, "package-layout"]], "Prerequisites": [[28, "prerequisites"]], "Installing from source": [[28, "installing-from-source"]], "Git clone": [[28, "git-clone"]], "Environment Variables": [[28, "environment-variables"]], "Tutorials": [[28, "tutorials"]], "Authors": [[28, "authors"]], "License": [[28, "license"]], "Acknowledgement": [[28, "acknowledgement"]]}, "indexentries": {"scripterror": [[0, "ccs.common.exceptions.ScriptError"]], "ccs.common.exceptions": [[0, "module-ccs.common.exceptions"]], "module": [[0, "module-ccs.common.exceptions"], [1, "module-ccs.common"], [2, "module-ccs.common.io"], [3, "module-ccs.common.math.ewald"], [4, "module-ccs.common.math"], [5, "module-ccs.common.neighborlist"], [6, "module-ccs.data.conversion"], [7, "module-ccs.data"], [8, "module-ccs.fitting"], [10, "module-ccs.fitting.main"], [11, "module-ccs.fitting.objective"], [12, "module-ccs.fitting.spline_functions"], [13, "module-ccs"], [15, "module-ccs.scripts.ccs_build_db"], [16, "module-ccs.scripts.ccs_export_sktable"], [17, "module-ccs.scripts.ccs_fetch"], [18, "module-ccs.scripts.ccs_fit"], [19, "module-ccs.scripts.ccs_validate"], [20, "module-ccs.scripts"], [21, "module-ccs_ase_calculator"], [22, "module-ccs_ppmd"], [24, "module-regression"], [25, "module-timing"]], "ccs.common": [[1, "module-ccs.common"]], "ccs.common.io": [[2, "module-ccs.common.io"]], "get_paths_from_file() (in module ccs.common.io)": [[2, "ccs.common.io.get_paths_from_file"]], "read_detailedout() (in module ccs.common.io)": [[2, "ccs.common.io.read_detailedout"]], "ccs.common.math.ewald": [[3, "module-ccs.common.math.ewald"]], "ewald_summation() (in module ccs.common.math.ewald)": [[3, "ccs.common.math.ewald.ewald_summation"]], "ccs.common.math": [[4, "module-ccs.common.math"]], "ccs.common.neighborlist": [[5, "module-ccs.common.neighborlist"]], "pair_dist() (in module ccs.common.neighborlist)": [[5, "ccs.common.neighborlist.pair_dist"]], "aa__bohr (in module ccs.data.conversion)": [[6, "ccs.data.conversion.AA__Bohr"]], "bohr__aa (in module ccs.data.conversion)": [[6, "ccs.data.conversion.Bohr__AA"]], "hartree__ev (in module ccs.data.conversion)": [[6, "ccs.data.conversion.Hartree__eV"]], "ccs.data.conversion": [[6, "module-ccs.data.conversion"]], "ev__hartree (in module ccs.data.conversion)": [[6, "ccs.data.conversion.eV__Hartree"]], "ccs.data": [[7, "module-ccs.data"]], "ccs.fitting": [[8, "module-ccs.fitting"]], "built-in function": [[9, "parse"], [9, "prepare_input"], [9, "twp_fit"], [14, "ccs_build_db"], [14, "main"]], "logger (built-in variable)": [[9, "logger"]], "parse()": [[9, "parse"]], "prepare_input()": [[9, "prepare_input"]], "twp_fit()": [[9, "twp_fit"]], "ccs.fitting.main": [[10, "module-ccs.fitting.main"]], "logger (in module ccs.fitting.main)": [[10, "ccs.fitting.main.logger"]], "parse() (in module ccs.fitting.main)": [[10, "ccs.fitting.main.parse"]], "prepare_input() (in module ccs.fitting.main)": [[10, "ccs.fitting.main.prepare_input"]], "twp_fit() (in module ccs.fitting.main)": [[10, "ccs.fitting.main.twp_fit"]], "objective (class in ccs.fitting.objective)": [[11, "ccs.fitting.objective.Objective"]], "assign_parameter_values() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.assign_parameter_values"]], "ccs.fitting.objective": [[11, "module-ccs.fitting.objective"]], "eval_obj() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.eval_obj"]], "get_g() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.get_g"]], "get_m() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.get_m"]], "list_iterator() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.list_iterator"]], "logger (in module ccs.fitting.objective)": [[11, "ccs.fitting.objective.logger"]], "merge_intervals() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.merge_intervals"]], "predict() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.predict"]], "reduce_stoichiometry() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.reduce_stoichiometry"]], "solution() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.solution"]], "solver() (ccs.fitting.objective.objective static method)": [[11, "ccs.fitting.objective.Objective.solver"]], "unfold_intervals() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.unfold_intervals"]], "write_ccs_params() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.write_CCS_params"]], "write_error() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.write_error"]], "write_error_forces() (ccs.fitting.objective.objective method)": [[11, "ccs.fitting.objective.Objective.write_error_forces"]], "onebody (class in ccs.fitting.spline_functions)": [[12, "ccs.fitting.spline_functions.Onebody"]], "twobody (class in ccs.fitting.spline_functions)": [[12, "ccs.fitting.spline_functions.Twobody"]], "ccs.fitting.spline_functions": [[12, "module-ccs.fitting.spline_functions"]], "dissolve_interval() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.dissolve_interval"]], "get_const() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.get_const"]], "get_expcoeffs() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.get_expcoeffs"]], "get_spline_coeffs() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.get_spline_coeffs"]], "get_v() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.get_v"]], "get_v_forces() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.get_v_forces"]], "logger (in module ccs.fitting.spline_functions)": [[12, "ccs.fitting.spline_functions.logger"]], "merge_intervals() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.merge_intervals"]], "spline_construction() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.spline_construction"]], "switch_const() (ccs.fitting.spline_functions.twobody method)": [[12, "ccs.fitting.spline_functions.Twobody.switch_const"]], "__version__ (in module ccs)": [[13, "ccs.__version__"]], "ccs": [[13, "module-ccs"]], "ccs_build_db() (in module ccs)": [[13, "ccs.ccs_build_db"]], "ccs_export_sktable() (in module ccs)": [[13, "ccs.ccs_export_sktable"]], "ccs_fetch() (in module ccs)": [[13, "ccs.ccs_fetch"]], "ccs_fit() (in module ccs)": [[13, "ccs.ccs_fit"]], "ccs_validate() (in module ccs)": [[13, "ccs.ccs_validate"]], "ccs_build_db()": [[14, "ccs_build_db"]], "main()": [[14, "main"]], "ccs.scripts.ccs_build_db": [[15, "module-ccs.scripts.ccs_build_db"]], "ccs_build_db() (in module ccs.scripts.ccs_build_db)": [[15, "ccs.scripts.ccs_build_db.ccs_build_db"]], "main() (in module ccs.scripts.ccs_build_db)": [[15, "ccs.scripts.ccs_build_db.main"]], "_write() (in module ccs.scripts.ccs_export_sktable)": [[16, "ccs.scripts.ccs_export_sktable._write"]], "ccs.scripts.ccs_export_sktable": [[16, "module-ccs.scripts.ccs_export_sktable"]], "main() (in module ccs.scripts.ccs_export_sktable)": [[16, "ccs.scripts.ccs_export_sktable.main"]], "write_dftb_spline() (in module ccs.scripts.ccs_export_sktable)": [[16, "ccs.scripts.ccs_export_sktable.write_dftb_spline"]], "ccs.scripts.ccs_fetch": [[17, "module-ccs.scripts.ccs_fetch"]], "ccs_fetch() (in module ccs.scripts.ccs_fetch)": [[17, "ccs.scripts.ccs_fetch.ccs_fetch"]], "main() (in module ccs.scripts.ccs_fetch)": [[17, "ccs.scripts.ccs_fetch.main"]], "pair_dist() (in module ccs.scripts.ccs_fetch)": [[17, "ccs.scripts.ccs_fetch.pair_dist"]], "filename (in module ccs.scripts.ccs_fit)": [[18, "ccs.scripts.ccs_fit.FILENAME"]], "usage (in module ccs.scripts.ccs_fit)": [[18, "ccs.scripts.ccs_fit.USAGE"]], "ccs.scripts.ccs_fit": [[18, "module-ccs.scripts.ccs_fit"]], "ccs_fit() (in module ccs.scripts.ccs_fit)": [[18, "ccs.scripts.ccs_fit.ccs_fit"]], "main() (in module ccs.scripts.ccs_fit)": [[18, "ccs.scripts.ccs_fit.main"]], "parse_cmdline_args() (in module ccs.scripts.ccs_fit)": [[18, "ccs.scripts.ccs_fit.parse_cmdline_args"]], "ccs.scripts.ccs_validate": [[19, "module-ccs.scripts.ccs_validate"]], "ccs_validate() (in module ccs.scripts.ccs_validate)": [[19, "ccs.scripts.ccs_validate.ccs_validate"]], "main() (in module ccs.scripts.ccs_validate)": [[19, "ccs.scripts.ccs_validate.main"]], "ccs.scripts": [[20, "module-ccs.scripts"]], "ccs (class in ccs_ase_calculator)": [[21, "ccs_ase_calculator.CCS"]], "calculate() (ccs_ase_calculator.ccs method)": [[21, "ccs_ase_calculator.CCS.calculate"]], "ccs_ase_calculator": [[21, "module-ccs_ase_calculator"]], "eval_energy() (ccs_ase_calculator.spline_table method)": [[21, "ccs_ase_calculator.spline_table.eval_energy"]], "eval_force() (ccs_ase_calculator.spline_table method)": [[21, "ccs_ase_calculator.spline_table.eval_force"]], "ew() (in module ccs_ase_calculator)": [[21, "ccs_ase_calculator.ew"]], "implemented_properties (ccs_ase_calculator.ccs attribute)": [[21, "ccs_ase_calculator.CCS.implemented_properties"]], "logg (in module ccs_ase_calculator)": [[21, "ccs_ase_calculator.logg"]], "spline_table (class in ccs_ase_calculator)": [[21, "ccs_ase_calculator.spline_table"]], "ccs (class in ccs_ppmd)": [[22, "ccs_ppmd.CCS"]], "constant (in module ccs_ppmd)": [[22, "ccs_ppmd.Constant"]], "fire (class in ccs_ppmd)": [[22, "ccs_ppmd.FIRE"]], "fire_loop_1() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.FIRE_LOOP_1"]], "fire_loop_2() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.FIRE_LOOP_2"]], "fire_loop_3() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.FIRE_LOOP_3"]], "fire_loop_4() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.FIRE_LOOP_4"]], "fire_loop_5() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.FIRE_LOOP_5"]], "globalarray (in module ccs_ppmd)": [[22, "ccs_ppmd.GlobalArray"]], "integratorrange (in module ccs_ppmd)": [[22, "ccs_ppmd.IntegratorRange"]], "kernel (in module ccs_ppmd)": [[22, "ccs_ppmd.Kernel"]], "pairloop (in module ccs_ppmd)": [[22, "ccs_ppmd.PairLoop"]], "particledat (in module ccs_ppmd)": [[22, "ccs_ppmd.ParticleDat"]], "particleloop (in module ccs_ppmd)": [[22, "ccs_ppmd.ParticleLoop"]], "positiondat (in module ccs_ppmd)": [[22, "ccs_ppmd.PositionDat"]], "scalararray (in module ccs_ppmd)": [[22, "ccs_ppmd.ScalarArray"]], "state (in module ccs_ppmd)": [[22, "ccs_ppmd.State"]], "ccs_ppmd": [[22, "module-ccs_ppmd"]], "eval() (ccs_ppmd.ccs method)": [[22, "ccs_ppmd.CCS.eval"]], "newtonic() (in module ccs_ppmd)": [[22, "ccs_ppmd.newtonic"]], "opt() (ccs_ppmd.fire method)": [[22, "ccs_ppmd.FIRE.opt"]], "optimize() (in module ccs_ppmd)": [[22, "ccs_ppmd.optimize"]], "steepest_descent() (in module ccs_ppmd)": [[22, "ccs_ppmd.steepest_descent"]], "ccs_regressor (class in regression)": [[24, "regression.CCS_regressor"]], "const() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.const"]], "fit() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.fit"]], "merge_intervals() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.merge_intervals"]], "model() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.model"]], "predict() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.predict"]], "regression": [[24, "module-regression"]], "rubber_band() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.rubber_band"]], "solver() (regression.ccs_regressor static method)": [[24, "regression.CCS_regressor.solver"]], "spline_construction() (regression.ccs_regressor method)": [[24, "regression.CCS_regressor.spline_construction"]], "timing": [[25, "module-timing"]], "timing() (in module timing)": [[25, "timing.timing"]]}})