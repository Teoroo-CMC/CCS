# This is a basic workflow for continuous integration of ccs

# Name of the workflow
name: ci-cd

on: [push, pull_request]
# A workflow run is made up of one or more jobs that can run 
# sequentially or in parallel
jobs:
  # This workflow contains a single job called "ci"
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    # Set up a Python environment for use in actions
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # This workflow contains a single job called "build"
    - name: Check-out repository
      uses: actions/checkout@v3

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Test with pytest
      run: poetry run pytest tests/ --cov=ccs --cov-report=xml

#     - name: Commit files
#       run: |
#         echo ${{ github.ref }}
#         git add .
#         git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#         git config --local user.name "github-actions[bot]"
#         git commit -m "CI: Automated build push" -a | exit 0

#     - name: Push changes
#       if: github.ref == 'refs/heads/master'
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}

#     - name: Build documentation
#       uses: actions/upload-artifact@v3
#       with:
#         name: docs
#         path: docs/_build

#     - name: Build documentation
#       uses: ammaraskar/sphinx-action@master
#       with:
#         docs-folder: "docs/"

#     - name: Build and Commit Documentation
#       uses: sphinx-notes/pages@master
#       with:
#         documentation_path: docs/

#     - name: Push Documentation
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         branch: gh-pages

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to the "master" branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Build documentation
      run: poetry run make clean html --directory docs/

    - name: Use Python Semantic Release to prepare release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          git config user.name ThijsSmolders
          git config user.email github-actions@github.com
          poetry run semantic-release publish

    # Uncomment code block below for automatic upload to both TestPyPI and if that works to PyPI. This can also be replaced by setting upload_to_pypi = true in pyproject.toml 
    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/

    # - name: Test install from TestPyPI
    #   run: |
    #       pip install \
    #       --index-url https://test.pypi.org/simple/ \
    #       --extra-index-url https://pypi.org/simple \
    #       pycounts

    # - name: Publish to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}